apiVersion: /v1
kind: Service
metadata:
  name: haproxy
  namespace: mongodb-cluster
spec:
  type: NodePort
  ports:
    - name: dashboard
      port: 8080
      targetPort: 8080
    - name: mongodb-write
      port: 27017
      targetPort: 27017
      nodePort: 30017
    - name: mongodb-read
      port: 27018
      targetPort: 27018
      nodePort: 30018
  selector:
    app: haproxy
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-config
  namespace: mongodb-cluster
data:
  haproxy.cfg: |
    global
    	daemon
    	maxconn 256

    defaults
    	mode tcp
    	timeout connect 5000ms
    	timeout client 50000ms
    	timeout server 50000ms


    frontend http
    	bind :8080
    	default_backend stats


    backend stats
    	mode http
    	stats enable

    	stats enable
    	stats uri /
    	stats refresh 1s
    	stats show-legends
    	stats admin if TRUE

    resolvers k8s
      parse-resolv-conf
      hold other           10s
      hold refused         10s
      hold nx              10s
      hold timeout         10s
      hold valid           10s
      hold obsolete        10s

    frontend mongodb-read
    	bind *:27018
        default_backend mongodb-online


    frontend mongodb-write
        bind *:27017
    	default_backend mongodb-primary


    backend mongodb-primary
      mode    tcp
      option tcp-check
      #balance roundrobin
      #tcp-check expect binary 69736d61737465720001
      tcp-check send-binary 3a000000 # Message Length (58)
      tcp-check send-binary EEEEEEEE # Request ID (random value)
      tcp-check send-binary 00000000 # Response To (nothing)
      tcp-check send-binary d4070000 # OpCode (Query)
      tcp-check send-binary 00000000 # Query Flags
      tcp-check send-binary 61646d696e2e # fullCollectionName (admin.$cmd)
      tcp-check send-binary 24636d6400 # continued
      tcp-check send-binary 00000000 # NumToSkip
      tcp-check send-binary FFFFFFFF # NumToReturn
      # Start of Document
      tcp-check send-binary 13000000 # Document Length (19)
      tcp-check send-binary 10 # Type (Int32)
      tcp-check send-binary 69736d617374657200 # ismaster:
      tcp-check send-binary 01000000 # Value : 1
      tcp-check send-binary 00 # Term
      tcp-check expect binary 69736d61737465720001 #ismaster True
      option tcpka
      option tcplog
      server-template mongodb 3 mongodb-headless.mongodb-cluster.svc.cluster.local:27017 check inter 1s resolvers k8s init-addr none
      # server mongodb-0 mongodb-0.mongodb-headless.mongodb-cluster.svc.cluster.local:27017 check inter 2000 resolvers k8s init-addr none
      # server mongodb-1 mongodb-1.mongodb-headless.mongodb-cluster.svc.cluster.local:27017 check inter 2000 resolvers k8s init-addr none
      # server mongodb-2 mongodb-2.mongodb-headless.mongodb-cluster.svc.cluster.local:27017 check inter 2000 resolvers k8s init-addr none


    backend mongodb-online
      mode    tcp
      option tcp-check
      balance roundrobin
      #tcp-check expect binary 69736d61737465720001
      tcp-check send-binary 3a000000 # Message Length (58)
      tcp-check send-binary EEEEEEEE # Request ID (random value)
      tcp-check send-binary 00000000 # Response To (nothing)
      tcp-check send-binary d4070000 # OpCode (Query)
      tcp-check send-binary 00000000 # Query Flags
      tcp-check send-binary 61646d696e2e # fullCollectionName (admin.$cmd)
      tcp-check send-binary 24636d6400 # continued
      tcp-check send-binary 00000000 # NumToSkip
      tcp-check send-binary FFFFFFFF # NumToReturn
      # Start of Document
      tcp-check send-binary 13000000 # Document Length (19)
      tcp-check send-binary 10 # Type (Int32)
      #tcp-check send-binary 69736d617374657200 # ismaster:
      tcp-check send-binary 01000000 # Value : 1
      tcp-check send-binary 00 # Term
      #tcp-check expect binary 69736d61737465720001 #ismaster True
      option tcpka
      option tcplog
      server-template mongodb 3 mongodb-headless.mongodb-cluster.svc.cluster.local:27017 check inter 1s resolvers k8s init-addr none
      # server mongodb-0 mongodb-0.mongodb-headless.mongodb-cluster.svc.cluster.local:27017 check inter 2000 resolvers k8s init-addr none
      # server mongodb-1 mongodb-1.mongodb-headless.mongodb-cluster.svc.cluster.local:27017 check inter 2000 resolvers k8s init-addr none
      # server mongodb-2 mongodb-2.mongodb-headless.mongodb-cluster.svc.cluster.local:27017 check inter 2000 resolvers k8s init-addr none

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: haproxy
  namespace: mongodb-cluster
  labels:
    app: haproxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: haproxy
  template:
    metadata:
      name: haproxy-pod
      labels:
        app: haproxy
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                    - haproxy
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: haproxy
          image: haproxy:lts-alpine3.17
          ports:
            - containerPort: 8080
            - containerPort: 27017
            - containerPort: 27018
          volumeMounts:
          - name: config
            mountPath: /usr/local/etc/haproxy/haproxy.cfg
            subPath: haproxy.cfg
            readOnly: true
      restartPolicy: Always
      volumes:
      - name: config
        configMap:
          name: haproxy-config
