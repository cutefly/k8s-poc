global:
  domain: argocd.club012.com

configs:
  # Argo CD configuration parameters
  ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/argocd-cmd-params-cm.yaml
  params:
    ## Server properties
    # -- Run server without TLS
    ## NOTE: This value should be set when you generate params by other means as it changes ports used by ingress template.
    server.insecure: true
  # General Argo CD configuration
  ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/argocd-cm.yaml
  cm:
    # -- Create the argocd-cm configmap for [declarative setup]
    create: true
    # -- Annotations to be added to argocd-cm configmap
    annotations: {}
    # -- Argo CD's externally facing base URL (optional). Required when configuring SSO
    url: https://argocd.club012.com
    oidc.config: |
      name: Keycloak
      issuer: https://keycloak.club012.com/realms/sso-realm
      clientID: argocd-client
      clientSecret: 7tPZeF7nnEAPHAD8JwG8zlWerBj9r4fv
      requestedScopes: ["openid", "profile", "email", "groups"]
      requestedIDTokenClaims: {"groups": {"essential": true}}
      logoutURL: https://keycloak.club012.com/realms/sso-realm/protocol/openid-connect/logout?id_token_hint={{token}}&post_logout_redirect_uri=https://argocd.club012.com/
  # Argo CD RBAC policy configuration
  ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/rbac.md
  rbac:
    # -- Create the argocd-rbac-cm configmap with ([Argo CD RBAC policy]) definitions.
    # If false, it is expected the configmap will be created by something else.
    # Argo CD will not work if there is no configmap created with the name above.
    create: true
    # -- File containing user-defined policies and role definitions.
    # @default -- `''` (See [values.yaml])
    policy.csv: |
      g, admin, role:admin
      g, developer, role:readonly

server:
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      # cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    # extraTls:
    #   - hosts:
    #     - argocd.club012.com
    #     # Based on the ingress controller used secret might be optional
    #     secretName: argocd-tls
